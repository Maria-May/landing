{"pageProps":{"libId":"uikit","componentId":"progress","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Progress\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Progress} from '@gravity-ui/uikit';\n```\n\n`Progress` component indicates current operation progress. It can also be divided into sections.\n\n## Theme\n\nUse `theme` property to specify color of the whole progress or the composite part.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress text=\"default\" value={50} />\n<Progress text=\"warning\" theme=\"warning\" value={50} />\n<Progress text=\"info\" theme=\"info\" value={50} />\n<Progress text=\"success\" theme=\"success\" value={50} />\n<Progress text=\"danger\" theme=\"danger\" value={50} />\n<Progress text=\"misc\" theme=\"misc\" value={50} />\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"default\" value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"success\" theme=\"success\" value={50} />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"warning\" theme=\"warning\" value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"danger\" theme=\"danger\" value={50} />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"info\" theme=\"info \"value={50} />\n    <div style={{height: '15px'}} />\n    <UIKit.Progress text=\"misc\" theme=\"misc\" value={50} />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress text=\"default\" value={50} />\n<Progress text=\"warning\" theme=\"warning\" value={50} />\n<Progress text=\"info\" theme=\"info\" value={50} />\n<Progress text=\"success\" theme=\"success\" value={50} />\n<Progress text=\"danger\" theme=\"danger\" value={50} />\n<Progress text=\"misc\" theme=\"misc\" value={50} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## States\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress text=\"Loading\" theme=\"misc\" value={60} loading={true} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Size\n\nTo manage the size of the `Progress` component, use the `size` property that can take the following values: `\"xs\"`, `\"s\"`, and `\"m\"`. The `text` property works only with the `\"m\"` size.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress theme=\"success\" value={60} size=\"xs\" />\n<Progress theme=\"warning\" value={70} size=\"s\" />\n<Progress theme=\"danger\" value={80} size=\"m\" />\n`}\n>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"success\" value={60} size=\"xs\" /></div>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"warning\" value={70} size=\"s\" /></div>\n  <div style={{width: '30%'}}><UIKit.Progress theme=\"danger\" value={80} size=\"m\" /></div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress theme=\"success\" value={60} size=\"xs\" />\n<Progress theme=\"warning\" value={70} size=\"s\" />\n<Progress theme=\"danger\" value={80} size=\"m\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Breakpoints\n\nTo set breakpoints of the `Progress` component use the `colorStops` property.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress\n  value={10}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n<Progress\n  value={40}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n<Progress\n  value={60}\n  colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n/>\n`}\n>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={10}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={40}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n  <div style={{width: '30%'}}>\n    <UIKit.Progress\n      value={60}\n      colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]}\n    />\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress value={10} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n<Progress value={40} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n<Progress value={60} colorStops={[{theme: 'danger', stop: 20}, {theme: 'warning', stop: 50}, {theme: 'success', stop: 100}]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Stack\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<Progress\n  stack={[\n    {theme: 'default', content: 'First', value: 25},\n    {theme: 'success', content: 'Second', value: 25},\n    {theme: 'warning', content: 'Third', value: 25},\n    {theme: 'danger', content: 'Fourth', value: 25},\n  ]}\n/>\n<Progress text=\"Progress with custom colors\"\n  stack={[\n    {color: '#6e5d8c', value: 33.333333333333336},\n    {color: '#5b785b', value: 33.333333333333336},\n    {color: '#956069', value: 33.333333333333336},\n  ]}\n/>\n`}\n>\n<div style={{width: '30%'}}>\n  <UIKit.Progress\n    stack={[\n      {theme: 'default', content: 'First', value: 25},\n      {theme: 'success', content: 'Second', value: 25},\n      {theme: 'warning', content: 'Third', value: 25},\n      {theme: 'danger', content: 'Fourth', value: 25},\n    ]}\n  />\n</div>\n<div style={{width: '30%'}}>\n  <UIKit.Progress text=\"Progress with custom colors\"\n    stack={[\n      {color: '#6e5d8c', value: 33.333333333333336},\n      {color: '#5b785b', value: 33.333333333333336},\n      {color: '#956069', value: 33.333333333333336},\n    ]}\n  />\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Progress stack={[\n  {theme: 'default', content: 'First', value: 25},\n  {theme: 'success', content: 'Second', value: 25},\n  {theme: 'warning', content: 'Third', value: 25},\n  {theme: 'danger', content: 'Fourth', value: 25},\n]} />\n<Progress text=\"Progress with custom colors\" stack={[\n  {color: '#6e5d8c', value: 33.333333333333336},\n  {color: '#5b785b', value: 33.333333333333336},\n  {color: '#956069', value: 33.333333333333336},\n]} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name            | Description                                                                                                                         |                  Type                   |   Default   |\n| :-------------- | :---------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------: | :---------: |\n| className       | HTML `class` attribute                                                                                                              |                `string`                 |             |\n| colorStops      | Sets breakpoints with themes                                                                                                        | `Array<{theme: string; stop: number;}>` |             |\n| colorStopsValue | Sets the value for choosing the current stop or alternative value for colorStops. The available range is from 0 to 100.             |                `number`                 |             |\n| loading         | Toggles the `loading` state                                                                                                         |                `boolean`                |   `false`   |\n| size            | Sets the progress bar size. The progress bar text can only be displayed in `\"m\"` size.                                              |                `string`                 |    `\"m\"`    |\n| stack           | Configuration of composite progress bar. Not required if a `value` is provided.                                                     |             `Array<Stack>`              |             |\n| stackClassName  | HTML `class` attribute of stack                                                                                                     |                `string`                 |             |\n| text            | Text inside the progress bar                                                                                                        |                `string`                 |             |\n| theme           | Sets progress color                                                                                                                 |                `string`                 | `\"default\"` |\n| value           | Current progress value. The available range is from 0 to 100. Using the `stack` property value is optional and is used as maxValue. |                `number`                 |             |\n\n### `Stack`\n\n| Name      | Description                                                                                                                         |    Type     |   Default   |\n| :-------- | :---------------------------------------------------------------------------------------------------------------------------------- | :---------: | :---------: |\n| className | HTML `class` attribute of the stack element                                                                                         |  `string`   |             |\n| color     | Sets background color for the HTML `style` attribute                                                                                |  `string`   |             |\n| content   | Stack element content                                                                                                               | `ReactNode` |             |\n| title     | HTML `title` attribute                                                                                                              |  `string`   |             |\n| theme     | Sets the stack element color                                                                                                        |  `string`   | `\"default\"` |\n| value     | Current progress value. The available range is from 0 to 100. Using the `stack` property value is optional and is used as maxValue. |  `number`   |             |\n| qa        | HTML `data-qa` attribute, used in tests                                                                                             |  `string`   |             |\n"},"__N_SSG":true}