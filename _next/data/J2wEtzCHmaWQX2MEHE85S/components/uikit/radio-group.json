{"pageProps":{"libId":"uikit","componentId":"radio-group","readmeContent":"<!--GITHUB_BLOCK-->\n\n# RadioGroup\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {RadioGroup} from '@gravity-ui/uikit';\n```\n\nThe `RadioGroup` component is used to create a group where users can select a single option from multiple choices.\n\n### Disabled state\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioGroup name=\"group2\" defaultValue={options[0].value} options={options} disabled/>\n`}\n>\n  <UIKit.RadioGroup name=\"group2\" defaultValue=\"Value 1\" options={\n    [\n      {value: 'Value 1', content: 'Value 1'},\n      {value: 'Value 2', content: 'Value 2'},\n      {value: 'Value 3', content: 'Value 3'},\n    ]\n  } disabled/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: RadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioGroup name=\"group2\" defaultValue={options[0].value} options={options} disabled />;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Size\n\nTo control the size of the `RadioGroup`, use the `size` property. The default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioGroup name=\"group1\" defaultValue={options[0].value} options={options} size=\"m\"/>\n<RadioGroup name=\"group2\" defaultValue={options[0].value} options={options} size=\"l\"/>\n`}\n>\n  <UIKit.RadioGroup name=\"group1\" defaultValue=\"Value 1\" options={\n    [\n      {value: 'Value 1', content: 'Value 1'},\n      {value: 'Value 2', content: 'Value 2'},\n      {value: 'Value 3', content: 'Value 3'},\n    ]\n  } size=\"m\"/>\n  <UIKit.RadioGroup name=\"group2\" defaultValue=\"Value 1\" options={\n    [\n      {value: 'Value 1', content: 'Value 1'},\n      {value: 'Value 2', content: 'Value 2'},\n      {value: 'Value 3', content: 'Value 3'},\n    ]\n  } size=\"l\"/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n  const options: RadioGroupOption[] = [\n    {value: 'Value 1', content: 'Value 1'},\n    {value: 'Value 2', content: 'Value 2'},\n    {value: 'Value 3', content: 'Value 3'},\n  ];\n  <RadioGroup name=\"group1\" defaultValue={options[0].value} options={options} size=\"m\"/>\n  <RadioGroup name=\"group2\" defaultValue={options[0].value} options={options} size=\"l\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Direction\n\nTo control the direction of the `RadioGroup`, use the `direction` property. The default direction is `horizontal`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioGroup name=\"group1\" defaultValue={options[0].value} options={options} direction=\"horizontal\"/>\n<RadioGroup name=\"group2\" defaultValue={options[0].value} options={options} direction=\"vertical\"/>\n`}\n>\n  <UIKit.RadioGroup name=\"group1\" defaultValue=\"Value 1\" options={\n    [\n      {value: 'Value 1', content: 'Value 1'},\n      {value: 'Value 2', content: 'Value 2'},\n      {value: 'Value 3', content: 'Value 3'},\n    ]\n  } direction=\"horizontal\"/>\n  <UIKit.RadioGroup name=\"group2\" defaultValue=\"Value 1\" options={\n    [\n      {value: 'Value 1', content: 'Value 1'},\n      {value: 'Value 2', content: 'Value 2'},\n      {value: 'Value 3', content: 'Value 3'},\n    ]\n  } direction=\"vertical\"/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n  const options: RadioGroupOption[] = [\n    {value: 'Value 1', content: 'Value 1'},\n    {value: 'Value 2', content: 'Value 2'},\n    {value: 'Value 3', content: 'Value 3'},\n  ];\n  <RadioGroup name=\"group1\" defaultValue={options[0].value} options={options} direction=\"horizontal\"/>\n  <RadioGroup name=\"group2\" defaultValue={options[0].value} options={options} direction=\"vertical\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name            | Description                                                                                      |           Type            |    Default     |\n| :-------------- | :----------------------------------------------------------------------------------------------- | :-----------------------: | :------------: |\n| children        | The content of the radio group.                                                                  |        `ReactNode`        |                |\n| disabled        | Toggles the `disabled` state of the radio group.                                                 |         `boolean`         |    `false`     |\n| options         | Options for radio group.                                                                         |   `RadioGroupOption[]`    |                |\n| optionClassName | HTML `class` attribute for the radio children.                                                   |         `string`          |                |\n| direction       | Sets the direction of the radio group.                                                           |  `horizontal - vertical`  | `\"horizontal\"` |\n| defaultValue    | Sets the initial value state when the component is mounted.                                      |         `string`          |                |\n| onUpdate        | Fires when the user changes the radio state. Provides the new value as a callback's argument.    | `(value: string) => void` |                |\n| onChange        | Fires when the user changes the radio state. Provides the change event as a callback's argument. |        `Function`         |                |\n| size            | Sets the size of the radio group.                                                                |          `m` `l`          |      `m`       |\n| qa              | HTML `data-qa` attribute, used in tests.                                                         |         `string`          |                |\n| style           | HTML `style` attribute                                                                           |   `React.CSSProperties`   |                |\n| className       | HTML `class` attribute                                                                           |         `string`          |                |\n\n## RadioGroup.Option\n\nThe `RadioGroup` component also exports a nested `Option` component equivalent to the `Radio` component, which can be used to create radio options within the `RadioGroup`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioGroup name=\"group1\" defaultValue={options[0].value}>\n  <RadioGroup.Option content={options[0].content} value={options[0].value} />\n  <RadioGroup.Option content={options[1].content} value={options[1].value} />\n  <RadioGroup.Option content={options[2].content} value={options[2].value} />\n</RadioGroup>\n`}\n>\n<UIKit.RadioGroup name=\"group1\" defaultValue=\"Value 1\">\n  <UIKit.RadioGroup.Option content=\"Value 1\" value=\"Value 1\" />\n  <UIKit.RadioGroup.Option content=\"Value 2\" value=\"Value 2\" />\n  <UIKit.RadioGroup.Option content=\"Value 3\" value=\"Value 3\" />\n</UIKit.RadioGroup>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: RadioGroupOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioGroup name=\"group1\" defaultValue={options[0].value}>\n  <RadioGroup.Option content={options[0].content} value={options[0].value} />\n  <RadioGroup.Option content={options[1].content} value={options[1].value} />\n  <RadioGroup.Option content={options[2].content} value={options[2].value} />\n</RadioGroup>;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name     | Description                                         |    Type     | Default |\n| :------- | :-------------------------------------------------- | :---------: | :-----: |\n| children | The content of the radio (usually a label).         | `ReactNode` |         |\n| content  | The content of the radio (alternative to children). | `ReactNode` |         |\n| disabled | Toggles the `disabled` state of the radio.          |  `boolean`  | `false` |\n| value    | Control value                                       |  `string`   |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}