{"pageProps":{"libId":"uikit","componentId":"alert","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Alert\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Alert} from '@gravity-ui/uikit';\n```\n\n### Theme\n\n`normal` - main theme (used by default).\n\n`info` - used for any kind of regular information.\n\n`success` - used for positive information.\n\n`warning` - used for information which needs attention.\n\n`danger` - used for hazard information.\n\n`utility` - used for utility information.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\" />\n<Alert theme=\"info\" title=\"Info\" message=\"Info theme\" />\n<Alert theme=\"success\" title=\"Success\" message=\"Success theme\" />\n<Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\" />\n<Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\" />\n<Alert theme=\"utility\" title=\"utility\" message=\"Utility theme\" />\n`}>\n    <UIKit.Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\" />\n    <UIKit.Alert theme=\"info\" title=\"Info\" message=\"Info theme\" />\n    <UIKit.Alert theme=\"success\" title=\"Success\" message=\"Success theme\" />\n    <UIKit.Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\" />\n    <UIKit.Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\" />\n    <UIKit.Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert theme=\"normal\" title=\"Normal\" message=\"Normal theme\"/>\n<Alert theme=\"info\" title=\"Info\" message=\"Info theme\"/>\n<Alert theme=\"success\" title=\"Success\" message=\"Success theme\"/>\n<Alert theme=\"warning\" title=\"Warning\" message=\"Warning theme\"/>\n<Alert theme=\"danger\" title=\"Danger\" message=\"Danger theme\"/>\n<Alert theme=\"utility\" title=\"Utility\" message=\"Utility theme\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### View\n\n`filled` - used to adjust the background color of the alert (used by default).\n\n`outlined` - used to adjust the border color of the alert.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n<Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n`}\n>\n    <UIKit.Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n    <UIKit.Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```\n<Alert title=\"Filled\" message=\"Filled view\" view=\"filled\" />\n<Alert title=\"Outlined\" message=\"Outlined theme\" view=\"outlined\" />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Layout\n\n`vertical` - used to direct users to content if there is property `actions` with buttons. For showing buttons below text (\nused\nby default).\n\n`horizontal` - used to direct users to content if there is property `actions` with buttons. For showing buttons to the right\nof text.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>} />\n<Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>} />\n`}>\n    <UIKit.Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n    <UIKit.Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert layout=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>}/>\n<Alert layout=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>}/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Corners\n\n`rounded` - used for round corners of alert window (used by default).\n\n`square` - used for squared corners of alert window.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"  />\n<Alert title=\"Square\" message=\"Square corners\" corners=\"square\" />\n`}\n>\n    <UIKit.Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"  />\n    <UIKit.Alert title=\"Square\" message=\"Square corners\" corners=\"square\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert title=\"Rounded\" message=\"Rounded corners\" corners=\"rounded\"/>\n<Alert title=\"Square\" message=\"Square corners\" corners=\"square\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Alert title\n\n`title` - the title of the alert. It has a lower priority than Alert.Title.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert title={<Alert.Title className={'some-class'} text=\"some text\"></Alert.Title>} />\n`}\n>\n    <UIKit.Alert title={<UIKit.Alert.Title className={'some-class'} text=\"some text\"></UIKit.Alert.Title>} />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert title={<Alert.Title className={'some-class'} text=\"some text\"></Alert.Title>} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Alert message\n\n`message` - message of the alert. It should fully explain the content of the alert.\n\n## Alert onClose\n\n`onClose` - callback function called when a user clicks the alert's close button. When this property is defined, a close button is visible.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert onClose={() => alert('Close button pressed')} title=\"Alert has close\" message=\"Alert has close\" />\n`}\n>\n    <UIKit.Alert onClose={() => alert('Close button pressed')} title=\"Alert has close\" message=\"Alert has close\" />\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert\n  onClose={() => alert('Close button pressed')}\n  title=\"Alert has close\"\n  message=\"Alert has close\"\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Align\n\nDetermines how content inside the Alert component is vertically aligned.\n\n`baseline` - align used by default.\n\n`center` - content is vertically centered within the Alert component. Useful if actions take up\nmore space than text,\nor if the icon must be in the middle of the card.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<Alert align=\"baseline\" theme=\"info\" title=\"Baseline\" message=\"Baseline align\" actions={<Alert.Action>button</Alert.Action>} />\n<Alert align=\"center\" theme=\"info\" title=\"Center\" message=\"Center align\" actions={<Alert.Action>button</Alert.Action>} align=\"center\"/>\n`}>\n    <UIKit.Alert align=\"baseline\" theme=\"info\" title=\"Baseline\" message=\"Baseline align\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} />\n    <UIKit.Alert align=\"center\" theme=\"info\" title=\"Center\" message=\"Center align\" actions={<UIKit.Alert.Action>button</UIKit.Alert.Action>} align=\"center\"/>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Alert align=\"vertical\" title=\"Vertical\" message=\"Vertical direction\" actions={<Alert.Action>button</Alert.Action>}/>\n<Alert align=\"horizontal\" title=\"Horizontal\" message=\"Horizontal direction\" actions={<Alert.Action>button</Alert.Action>}/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name      | Description                                                                 |                                Type                                |   Default    |\n| :-------- | :-------------------------------------------------------------------------- | :----------------------------------------------------------------: | :----------: |\n| theme     | Alert appearance                                                            | `\"normal\"` `\"info\"` `\"success\"` `\"warning\"` `\"danger\"` `\"utility\"` |  `\"normal\"`  |\n| view      | Enable/disable background color of the alert                                |                      `\"filled\"` `\"outlined\"`                       |  `\"filled\"`  |\n| layout    | Used to direct users to content if there is property `actions` with buttons |                    `\"vertical\"` `\"horizontal\"`                     | `\"vertical\"` |\n| corners   | Used for round/square corners of the alert window                           |                       `\"rounded\"` `\"square\"`                       | `\"rounded\"`  |\n| title     | Title of the alert                                                          |                              `string`                              |              |\n| message   | Message of the alert                                                        |                              `string`                              |              |\n| onClose   | A callback function called when the user clicks the alert's close button    |                             `Function`                             |              |\n| actions   | Array of buttons or full custom components                                  |                 `React.ReactNode` `\"AlertAction\"`                  |              |\n| align     | Determines how content inside the Alert component is vertically aligned     |                      `\"center\"` `\"baseline\"`                       | `\"baseline\"` |\n| style     | HTML style attribute                                                        |                       `React.CSSProperties`                        |              |\n| className | Name of alert class                                                         |                              `string`                              |              |\n| icon      | Override default icon                                                       |                         `React.ReactNode`                          |              |\n| qa        | HTML `data-qa` attribute, used in tests.                                    |                              `string`                              |              |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en","ru"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en","ru"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}