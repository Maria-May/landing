{"pageProps":{"libId":"uikit","componentId":"modal","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Modal\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Modal} from '@gravity-ui/uikit';\n```\n\nThe `Modal` component serves as base for creating \"pop-up\" windows with backdrop above the rest content on a page.\nIt disables scrolling while open and manages focus for content. The children of the `Modal` is rendered inside [`Portal`](../Portal) component.\nDialogs, alerts, confirmations or whatever else can be implemented via `Modal`.\n\n## Usage\n\n```tsx\nimport React from 'react';\nimport {Button, Modal} from '@gravity-ui/uikit';\n\nconst [open, setOpen] = React.useState(false);\n\n<Button onClick={() => setOpen(true)}>Open Modal</Button>\n<Modal open={open} onClose={() => setOpen(false)}>\n    Content\n</Modal>\n```\n\n## Properties\n\n| Name                  | Description                                                                    |       Type        |     Default     |\n| :-------------------- | :----------------------------------------------------------------------------- | :---------------: | :-------------: |\n| autoFocus             | While opened focus will be set to the first interactive element in the content |     `boolean`     |     `true`      |\n| children              | Any React content                                                              | `React.ReactNode` |                 |\n| className             | HTML `class` atribute for root node                                            |     `string`      |                 |\n| container             | DOM element children to be mounted to                                          |   `HTMLElement`   | `document.body` |\n| contentClassName      | HTML `class` atribute for content node                                         |     `string`      |                 |\n| disableBodyScrollLock | Do not lock scroll while open                                                  |     `boolean`     |     `false`     |\n| disableEscapeKeyDown  | Do not trigger close on `Esc`                                                  |     `boolean`     |     `false`     |\n| disableOutsideClick   | Do not trigger close on outside clicks                                         |     `boolean`     |     `false`     |\n| focusTrap             | Enable focus trapping behaviour                                                |     `boolean`     |     `true`      |\n| keepMounted           | `Modal` won't be removed from the DOM on hiding                                |     `boolean`     |     `false`     |\n| onClose               | Handle `Modal` close event                                                     |    `Function`     |                 |\n| onEnterKeyDown        | `Enter` press event handler                                                    |    `Function`     |                 |\n| onEscapeKeyDown       | `Esc` press event handler                                                      |    `Function`     |                 |\n| onTransitionEnter     | Open transition start event handler                                            |    `Function`     |                 |\n| onTransitionExit      | Close transition start event handler                                           |    `Function`     |                 |\n| onTransitionEntered   | Open transition end event handler                                              |    `Function`     |                 |\n| onTransitionExited    | Close transition end event handler                                             |    `Function`     |                 |\n| onOutsideClick        | Outside click event handler                                                    |    `Function`     |                 |\n| open                  | Controls visibility of the `Modal`                                             |     `boolean`     |     `false`     |\n| qa                    | Test attribute (`data-qa`)                                                     |     `string`      |                 |\n| restoreFocusRef       | Element the focus will be restored to                                          | `React.RefObject` |                 |\n| style                 | HTML `style` atribute for root node                                            |     `string`      |                 |\n| aria-label            | HTML `aria-label` attribute to describe the `Modal`                            |     `string`      |                 |\n| aria-labelledby       | Id of visible `Modal`'s caption element                                        |     `string`      |                 |\n"},"__N_SSG":true}