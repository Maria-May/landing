{"pageProps":{"libId":"uikit","componentId":"user-label","readmeContent":"# UserLabel\n\nThe `UserLabel` component can be used to display users or user-related information.\n\n### Type\n\nUsed to manage avatar appearance. Use \"person\" for a personalized entity and \"email\" for an email adresses. Use \"empty\" for cases when you do not need any avatar.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<UserLabel type=\"person\">Charles Darwin</UserLabel>\n<UserLabel type=\"email\">email@example.com</UserLabel>\n<UserLabel type=\"empty\">Alan Turing</UserLabel>\n`}\n>\n    <UIKit.UserLabel type=\"person\">Charles Darwin</UIKit.UserLabel>\n    <UIKit.UserLabel type=\"email\">email@example.com</UIKit.UserLabel>\n    <UIKit.UserLabel type=\"empty\">Alan Turing</UIKit.UserLabel>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<UserLabel type=\"person\">Charles Darwin (person)</UserLabel>\n<UserLabel type=\"email\">email@example.com (email)</UserLabel>\n<UserLabel type=\"empty\">Alan Turing (other)</UserLabel>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Avatar\n\nThis component can be used with a custom avatar. It works only with `type: 'person'`. You are able to provide an image, a props of [Avatar](../Avatar/README.md) component or custom React node.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\nimport {GraduationCap} from '@gravity-ui/icons';\n\n<UserLabel type=\"person\" avatar=\"<url>\">Charles Darwin</UserLabel>\n<UserLabel type=\"person\" avatar={{icon: GraduationCap}}>Charles Darwin</UserLabel>\n`}\n>\n    <UIKit.UserLabel type=\"person\" avatar=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Charles_Darwin_by_Julia_Margaret_Cameron%2C_c._1868.jpg/193px-Charles_Darwin_by_Julia_Margaret_Cameron%2C_c._1868.jpg\">Charles Darwin</UIKit.UserLabel>\n    <UIKit.UserLabel type=\"person\" avatar={{icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M6.836 3.202 1.74 5.386a.396.396 0 0 0 0 .728l5.096 2.184a2.5 2.5 0 0 0 .985.202h.358a2.5 2.5 0 0 0 .985-.202l5.096-2.184a.396.396 0 0 0 0-.728L9.164 3.202A2.5 2.5 0 0 0 8.179 3h-.358a2.5 2.5 0 0 0-.985.202ZM1.5 7.642l1.5.644v3.228a2 2 0 0 0 1.106 1.789l.806.403a7 7 0 0 0 6.193.033l.909-.442a2 2 0 0 0 1.125-1.798V8.226l1.712-.734a1.896 1.896 0 0 0 0-3.484L9.755 1.823A4 4 0 0 0 8.179 1.5h-.358a4 4 0 0 0-1.576.323L1.15 4.008A1.896 1.896 0 0 0 0 5.75v4.5a.75.75 0 0 0 1.5 0V7.643Zm3 3.872V8.929l1.745.748A4 4 0 0 0 7.821 10h.358a4 4 0 0 0 1.576-.323l1.884-.808v2.63a.5.5 0 0 1-.282.45l-.909.442a5.5 5.5 0 0 1-4.865-.027l-.807-.403a.5.5 0 0 1-.276-.447Z\" clip-rule=\"evenodd\"/></svg>'}}>Charles Darwin</UIKit.UserLabel>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nimport {GraduationCap} from '@gravity-ui/icons';\n\n<UserLabel type=\"person\" avatar=\"<url>\">Charles Darwin</UserLabel>\n<UserLabel type=\"person\" avatar={{icon: GraduationCap}}>Charles Darwin</UserLabel>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Interactivity\n\nThis component is also interactive. It can be clickable or closable.\n\n<!--LANDING_BLOCK\n<ExampleBlock\n    code={`\n<UserLabel onClick={() => alert('onClick triggered')}>Charles Darwin</UserLabel>\n<UserLabel onCloseClick={() => alert('onCloseClick triggered')}>Charles Darwin</UserLabel>\n`}\n>\n    <UIKit.UserLabel onClick={() => alert('onClick triggered')}>Charles Darwin</UIKit.UserLabel>\n    <UIKit.UserLabel onCloseClick={() => alert('onCloseClick triggered')}>Charles Darwin</UIKit.UserLabel>\n</ExampleBlock>\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<UserLabel onClick={() => alert('onClick triggered')}>Charles Darwin</UserLabel>\n<UserLabel onCloseClick={() => alert('onCloseClick triggered')}>Charles Darwin</UserLabel>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name         | Description                                 |                                    Type                                     |   Default    |\n| :----------- | :------------------------------------------ | :-------------------------------------------------------------------------: | :----------: |\n| type         | Avatar appearance                           |                       `'person'` `'email'` `'empty'`                        |  `'person'`  |\n| avatar       | User avatar                                 | [AvatarProps](../Avatar/README.md#properties) `string` `React.ReactElement` |              |\n| children     | Visible text                                |                              `React.ReactNode`                              |              |\n| view         | UserLabel view                              |                           `'outlined'` `'clear'`                            | `'outlined'` |\n| onClick      | `click` event handler for component itself  |                                 `Function`                                  |              |\n| onCloseClick | `click` event handler for button with cross |                                 `Function`                                  |              |\n| className    | Custom CSS class for root element           |                                  `string`                                   |              |\n| style        | HTML style attribute                        |                            `React.CSSProperties`                            |              |\n| qa           | HTML `data-qa` attribute, used in tests     |                                  `string`                                   |              |\n| size         | Avatar size                                 |                       `'xs'` `'s'` `'m'` `'l'` `'xl'`                       |    `'s'`     |\n\n## CSS API\n\n| Name                         | Description      |\n| :--------------------------- | :--------------- |\n| `--g-user-label-font-size`   | Text font size   |\n| `--g-user-label-line-height` | Text line height |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","menu_themes":"Themes","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}