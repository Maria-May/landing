{"pageProps":{"libId":"uikit","componentId":"radio-button","readmeContent":"<!--GITHUB_BLOCK-->\n\n# RadioButton\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {RadioButton} from '@gravity-ui/uikit';\n```\n\nThe `RadioButton` component is used to create a group of radio buttons where users can select a single option from multiple choices.\n\n### Disabled state\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioButtonOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioButton name=\"group1\" defaultValue={options[0].value} options={options} disabled/>\n`}\n>\n  <UIKit.RadioButton name=\"group1\" defaultValue=\"Value 1\" options={\n    [\n      {value: 'Value 1', content: 'Value 1'},\n      {value: 'Value 2', content: 'Value 2'},\n      {value: 'Value 3', content: 'Value 3'},\n    ]\n  } disabled/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: RadioButtonOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioButton name=\"group1\" defaultValue={options[0].value} options={options} disabled />;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Size\n\nTo control the size of the `RadioButton`, use the `size` property. The default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioButtonOption[] = [\n  {value: 'Value 1', content: 's'},\n  {value: 'Value 2', content: 'm'},\n  {value: 'Value 3', content: 'l'},\n  {value: 'Value 4', content: 'xl'},\n];\n<RadioButton name=\"group1\" defaultValue={options[0].value} options={options} size=\"s\"/>\n<RadioButton name=\"group2\" defaultValue={options[1].value} options={options} size=\"m\"/>\n<RadioButton name=\"group3\" defaultValue={options[2].value} options={options} size=\"l\"/>\n<RadioButton name=\"group4\" defaultValue={options[3].value} options={options} size=\"xl\"/>\n`}\n>\n  <div style={{display: 'grid', justifyItems: 'center', gap: 10}}>\n    <UIKit.RadioButton name=\"group1\" defaultValue=\"Value 1\" options={\n      [\n        {value: 'Value 1', content: 's'},\n        {value: 'Value 2', content: 'm'},\n        {value: 'Value 3', content: 'l'},\n        {value: 'Value 4', content: 'xl'},\n      ]\n    } size=\"s\"/>\n    <UIKit.RadioButton name=\"group2\" defaultValue=\"Value 2\" options={\n      [\n        {value: 'Value 1', content: 's'},\n        {value: 'Value 2', content: 'm'},\n        {value: 'Value 3', content: 'l'},\n        {value: 'Value 4', content: 'xl'},\n      ]\n    } size=\"m\"/>\n    <UIKit.RadioButton name=\"group3\" defaultValue=\"Value 3\" options={\n      [\n        {value: 'Value 1', content: 's'},\n        {value: 'Value 2', content: 'm'},\n        {value: 'Value 3', content: 'l'},\n        {value: 'Value 4', content: 'xl'},\n      ]\n    } size=\"l\"/>\n    <UIKit.RadioButton name=\"group4\" defaultValue=\"Value 4\" options={\n      [\n        {value: 'Value 1', content: 's'},\n        {value: 'Value 2', content: 'm'},\n        {value: 'Value 3', content: 'l'},\n        {value: 'Value 4', content: 'xl'},\n      ]\n    } size=\"xl\"/>\n  </div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n  const options: RadioButtonOption[] = [\n    {value: 'Value 1', content: 's'},\n    {value: 'Value 2', content: 'm'},\n    {value: 'Value 3', content: 'l'},\n    {value: 'Value 4', content: 'xl'},\n  ];\n  <RadioButton name=\"group1\" defaultValue={options[0].value} options={options} size=\"s\"/>\n  <RadioButton name=\"group2\" defaultValue={options[1].value} options={options} size=\"m\"/>\n  <RadioButton name=\"group3\" defaultValue={options[2].value} options={options} size=\"l\"/>\n  <RadioButton name=\"group4\" defaultValue={options[3].value} options={options} size=\"xl\"/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Width\n\nTo control the width of the `RadioButton`, use the `width` property.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\n<div style={{width: 140, border: '2px dashed gray'}}>\n  <div style={{marginBottom: 10}}>\n    <RadioButton>\n      <RadioButton.Option value=\"1\" content=\"none\" />\n      <RadioButton.Option value=\"2\" content=\"none********\" />\n    </RadioButton>\n  </div>\n  <div style={{marginBottom: 10}}>\n    <RadioButton width=\"auto\">\n      <RadioButton.Option value=\"1\" content=\"auto\" />\n      <RadioButton.Option value=\"2\" content=\"auto********\" />\n    </RadioButton>\n  </div>\n  <div>\n    <RadioButton width=\"max\">\n      <RadioButton.Option value=\"1\" content=\"max\" />\n      <RadioButton.Option value=\"2\" content=\"max\" />\n    </RadioButton>\n  </div>\n</div>\n`}\n>\n<div style={{width: 140, border: '2px dashed gray'}}>\n <div style={{marginBottom: 10}}>\n    <UIKit.RadioButton>\n      <UIKit.RadioButton.Option value=\"1\" content=\"none\" />\n      <UIKit.RadioButton.Option value=\"2\" content=\"none********\" />\n    </UIKit.RadioButton>\n  </div>\n  <div style={{marginBottom: 10}}>\n    <UIKit.RadioButton width=\"auto\">\n      <UIKit.RadioButton.Option value=\"1\" content=\"auto\" />\n      <UIKit.RadioButton.Option value=\"2\" content=\"auto********\" />\n    </UIKit.RadioButton>\n  </div>\n  <div>\n    <UIKit.RadioButton width=\"max\">\n      <UIKit.RadioButton.Option value=\"1\" content=\"max\" />\n      <UIKit.RadioButton.Option value=\"2\" content=\"max\" />\n    </UIKit.RadioButton>\n  </div>\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<div style={{width: 140, border: '2px dashed gray'}}>\n  <div style={{marginBottom: 10}}>\n    <RadioButton>\n      <RadioButton.Option value=\"1\" content=\"none\" />\n      <RadioButton.Option value=\"2\" content=\"none********\" />\n    </RadioButton>\n  </div>\n  <div style={{marginBottom: 10}}>\n    <RadioButton width=\"auto\">\n      <RadioButton.Option value=\"1\" content=\"auto\" />\n      <RadioButton.Option value=\"2\" content=\"auto********\" />\n    </RadioButton>\n  </div>\n  <div>\n    <RadioButton width=\"max\">\n      <RadioButton.Option value=\"1\" content=\"max\" />\n      <RadioButton.Option value=\"2\" content=\"max\" />\n    </RadioButton>\n  </div>\n</div>\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name         | Description                                                                                          |           Type            | Default |\n| :----------- | :--------------------------------------------------------------------------------------------------- | :-----------------------: | :-----: |\n| children     | The content of the radio button.                                                                     |        `ReactNode`        |         |\n| disabled     | Toggles the `disabled` state of the radio button.                                                    |         `boolean`         | `false` |\n| options      | Options for radio button.                                                                            |   `RadioButtonOption[]`   |         |\n| defaultValue | Sets the initial value state when the component is mounted.                                          |         `string`          |         |\n| onUpdate     | Fires when the user changes the radio button state. Provides the new value as a callback's argument. | `(value: string) => void` |         |\n| onChange     | Fires when the user changes the radio button state. Provides change event as a callback's argument.  |        `Function`         |         |\n| onFocus      | Event handler for when the radio input element receives focus.                                       |        `Function`         |         |\n| onBlur       | Event handler for when the radio input element loses focus.                                          |        `Function`         |         |\n| width        | Sets the width of the radio button.                                                                  |       `auto - max`        |         |\n| size         | Sets the size of the radio button.                                                                   |     `s` `m` `l` `xl`      |   `m`   |\n| name         | HTML `name` attribute for the input element.                                                         |         `string`          |         |\n| qa           | HTML `data-qa` attribute, used in tests.                                                             |         `string`          |         |\n| style        | HTML `style` attribute                                                                               |   `React.CSSProperties`   |         |\n| className    | HTML `class` attribute                                                                               |         `string`          |         |\n\n## RadioButton.Option\n\nThe `RadioButton` component also exports a nested `Option` component. You can use it to create radio button options within the `RadioButton`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n  code={`\nconst options: RadioButtonOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioButton name=\"group1\" defaultValue={options[0].value}>\n  <RadioButton.Option content={options[0].content} value={options[0].value} />\n  <RadioButton.Option content={options[1].content} value={options[1].value} />\n  <RadioButton.Option content={options[2].content} value={options[2].value} />\n</RadioGroup>\n`}\n>\n<UIKit.RadioButton name=\"group1\" defaultValue=\"Value 1\">\n  <UIKit.RadioButton.Option content=\"Value 1\" value=\"Value 1\" />\n  <UIKit.RadioButton.Option content=\"Value 2\" value=\"Value 2\" />\n  <UIKit.RadioButton.Option content=\"Value 3\" value=\"Value 3\" />\n</UIKit.RadioButton>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: RadioButtonOption[] = [\n  {value: 'Value 1', content: 'Value 1'},\n  {value: 'Value 2', content: 'Value 2'},\n  {value: 'Value 3', content: 'Value 3'},\n];\n<RadioButton name=\"group1\" defaultValue={options[0].value}>\n  <RadioButton.Option content={options[0].content} value={options[0].value} />\n  <RadioButton.Option content={options[1].content} value={options[1].value} />\n  <RadioButton.Option content={options[2].content} value={options[2].value} />\n</RadioButton>;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n| Name     | Description                                         |    Type     | Default |\n| :------- | :-------------------------------------------------- | :---------: | :-----: |\n| children | The content of the radio (usually a label).         | `ReactNode` |         |\n| content  | The content of the radio (alternative to children). | `ReactNode` |         |\n| disabled | Toggles the `disabled` state of the radio.          |  `boolean`  | `false` |\n| value    | Control value                                       |  `string`   |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en","ru"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en","ru"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}