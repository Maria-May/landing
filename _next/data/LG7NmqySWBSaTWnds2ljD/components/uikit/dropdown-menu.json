{"pageProps":{"libId":"uikit","componentId":"dropdown-menu","readmeContent":"<!--GITHUB_BLOCK-->\n\n# DropdownMenu\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {DropdownMenu} from '@gravity-ui/uikit';\n```\n\nThis is a dropdown menu component with item grouping, submenus, and a customizable toggle. The dropdown menu items are configured with the `items` prop. By default, the menu toggle is a button with the ellipsis icon (**⋯**), which can be overridden with the `renderSwitcher` prop.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Grouped items\n\n`DropdownMenu` items can be grouped and visually separated from other menu items by introducing arrays of menu items nested into the `items` array.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        [\n            {\n                action: () => console.log('Call'),\n                text: 'Call',\n            },\n            {\n                action: () => console.log('Send email'),\n                text: 'Send email',\n            },\n        ],\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            [\n                {\n                    action: () => console.log('Call'),\n                    text: 'Call',\n                },\n                {\n                    action: () => console.log('Send email'),\n                    text: 'Send email',\n                },\n            ],\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    [\n      {\n        action: () => console.log('Call'),\n        text: 'Call',\n      },\n      {\n        action: () => console.log('Send email'),\n        text: 'Send email',\n      },\n    ],\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Submenus\n\nThe `items` property on an individual menu item adds nested subitems to this menu item.\n\nMenu items with submenus obtain the following additional class names to allow for extra styling:\n\n- the class name `.g-dropdown-menu__menu-item_with-submenu` is added to items with more than 1 nested item;\n- the class name `.g-dropdown-menu__menu-item_active-parent` is added to an item whose submenu is currently open.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n        {\n            text: 'More',\n            items: [\n                {\n                    action: () => console.log('Mark as'),\n                    text: 'Mark as',\n                    items: [\n                        {\n                            action: () => console.log('Important'),\n                            text: 'Important',\n                        },\n                        {\n                            action: () => console.log('Favorite'),\n                            text: 'Favorite',\n                        },\n                    ],\n                },\n                {\n                    action: () => console.log('Copy'),\n                    text: 'Copy',\n                },\n                {\n                    text: 'Move to',\n                    items: [\n                        {\n                            action: () => console.log('Location #1'),\n                            text: 'Location #1',\n                        },\n                        {\n                            action: () => console.log('Location #2'),\n                            text: 'Location #2',\n                        },\n                    ],\n                },\n            ],\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n            {\n                text: 'More',\n                items: [\n                    {\n                        action: () => console.log('Mark as'),\n                        text: 'Mark as',\n                        items: [\n                            {\n                                action: () => console.log('Important'),\n                                text: 'Important',\n                            },\n                            {\n                                action: () => console.log('Favorite'),\n                                text: 'Favorite',\n                            },\n                        ],\n                    },\n                    {\n                        action: () => console.log('Copy'),\n                        text: 'Copy',\n                    },\n                    {\n                        text: 'Move to',\n                        items: [\n                            {\n                                action: () => console.log('Location #1'),\n                                text: 'Location #1',\n                            },\n                            {\n                                action: () => console.log('Location #2'),\n                                text: 'Location #2',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n    {\n      text: 'More',\n      items: [\n        {\n          action: () => console.log('Mark as'),\n          text: 'Mark as',\n          items: [\n            {\n              action: () => console.log('Important'),\n              text: 'Important',\n            },\n            {\n              action: () => console.log('Favorite'),\n              text: 'Favorite',\n            },\n          ],\n        },\n        {\n          action: () => console.log('Copy'),\n          text: 'Copy',\n        },\n        {\n          text: 'Move to',\n          items: [\n            {\n              action: () => console.log('Location #1'),\n              text: 'Location #1',\n            },\n            {\n              action: () => console.log('Location #2'),\n              text: 'Location #2',\n            },\n          ],\n        },\n      ],\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Custom menu toggle\n\nThe menu toggle is configured with the `renderSwitcher` prop. It can be any function that returns a React component (or any `(props: SwitcherProps) => React.ReactNode` in the TypeScript terms, see [`SwitcherProps`](#switcherprops) below). By default, the menu toggle is a button with the ellipsis icon (**⋯**).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    renderSwitcher={(props) => (\n        <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>John Doe</div>\n    )}\n    items={[\n        {\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        renderSwitcher={(props) => (\n            <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>John Doe</div>\n        )}\n        items={[\n            {\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  renderSwitcher={(props) => (\n    <div {...props} style={{cursor: 'pointer', borderBottom: '1px dotted'}}>\n      John Doe\n    </div>\n  )}\n  items={[\n    {\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\nThe example above is oversimplified to demonstrate the idea of the customizable menu toggle. In a real-life application, it is generally recommended that the clickable menu toggle should be a component accessible with a keyboard and other assistive technologies (such as a button).\n\n## Custom icons\n\nCustom icons can be added to a `DropdownMenu` item by assigning the `iconStart` or `iconEnd` property. By default, `DropdownMenu` items go without icons.\n\nThe menu toggle icon can be changed with the `DropdownMenu`'s `renderSwitcher` prop. By default, the menu toggle is a button with the ellipsis icon (**⋯**).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<DropdownMenu\n    renderSwitcher={(props) => (\n        <Button {...props} view=\"flat\">\n            <Icon size={16} data={Bars} />\n        </Button>\n    )}\n    items={[\n        {\n            iconStart: <Icon size={16} data={Pencil} />,\n            action: () => console.log('Rename'),\n            text: 'Rename',\n        },\n        {\n            iconStart: <Icon size={16} data={TrashBin} />,\n            action: () => console.log('Delete'),\n            text: 'Delete',\n            theme: 'danger',\n        },\n    ]}\n/>\n`}\n>\n    <UIKit.DropdownMenu\n        renderSwitcher={(props) => (\n            <UIKit.Button {...props} view=\"flat\">\n                <UIKit.Icon\n                    data={() => (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M1.25 3.25A.75.75 0 0 1 2 2.5h12A.75.75 0 0 1 14 4H2a.75.75 0 0 1-.75-.75Zm0 4.75A.75.75 0 0 1 2 7.25h12a.75.75 0 0 1 0 1.5H2A.75.75 0 0 1 1.25 8ZM2 12a.75.75 0 0 0 0 1.5h12a.75.75 0 0 0 0-1.5H2Z\" clip-rule=\"evenodd\"></path></svg>\n                    )}\n                    size={16}\n                />\n            </UIKit.Button>\n        )}\n        items={[\n            {\n                iconStart: (\n                    <UIKit.Icon\n                        data={() => (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M11.423 1A3.577 3.577 0 0 1 15 4.577c0 .27-.108.53-.3.722l-.528.529-1.971 1.971-5.059 5.059a3 3 0 0 1-1.533.82l-2.638.528a1 1 0 0 1-1.177-1.177l.528-2.638a3 3 0 0 1 .82-1.533l5.059-5.059 2.5-2.5c.191-.191.451-.299.722-.299Zm-2.31 4.009-4.91 4.91a1.5 1.5 0 0 0-.41.766l-.38 1.903 1.902-.38a1.5 1.5 0 0 0 .767-.41l4.91-4.91a2.077 2.077 0 0 0-1.88-1.88Zm3.098.658a3.59 3.59 0 0 0-1.878-1.879l1.28-1.28c.995.09 1.788.884 1.878 1.88l-1.28 1.28Z\" clip-rule=\"evenodd\"></path></svg>\n                        )}\n                        size={16}\n                    />\n                ),\n                action: () => console.log('Rename'),\n                text: 'Rename',\n            },\n            {\n                iconStart: (\n                    <UIKit.Icon\n                        data={() => (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M9 2H7a.5.5 0 0 0-.5.5V3h3v-.5A.5.5 0 0 0 9 2Zm2 1v-.5a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2V3H2.251a.75.75 0 0 0 0 1.5h.312l.317 7.625A3 3 0 0 0 5.878 15h4.245a3 3 0 0 0 2.997-2.875l.318-7.625h.312a.75.75 0 0 0 0-1.5H11Zm.936 1.5H4.064l.315 7.562A1.5 1.5 0 0 0 5.878 13.5h4.245a1.5 1.5 0 0 0 1.498-1.438l.315-7.562Zm-6.186 2v5a.75.75 0 0 0 1.5 0v-5a.75.75 0 0 0-1.5 0Zm3.75-.75a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75Z\" clip-rule=\"evenodd\"></path></svg>\n                        )}\n                        size={16}\n                    />\n                ),\n                action: () => console.log('Delete'),\n                text: 'Delete',\n                theme: 'danger',\n            },\n        ]}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```jsx\n<DropdownMenu\n  renderSwitcher={(props) => (\n    <Button {...props} view=\"flat\">\n      <Icon size={16} data={Bars} />\n    </Button>\n  )}\n  items={[\n    {\n      iconStart: <Icon size={16} data={Pencil} />,\n      action: () => console.log('Rename'),\n      text: 'Rename',\n    },\n    {\n      iconStart: <Icon size={16} data={TrashBin} />,\n      action: () => console.log('Delete'),\n      text: 'Delete',\n      theme: 'danger',\n    },\n  ]}\n/>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name                       | Description                                                                                    |                        Type                        |    Default    |\n| :------------------------- | :--------------------------------------------------------------------------------------------- | :------------------------------------------------: | :-----------: |\n| `items`                    | Array of items. Nested arrays of items represent visually separated groups.                    | `(DropdownMenuItem \\| DropdownMenuItem[])[] \\| []` |               |\n| `data`                     | A payload passed to the actions called from the menu. (Can be useful for context menus.)       |                       `any`                        |               |\n| `icon`                     | Icon of the default `switcher`.                                                                |                 `React.ReactNode`                  | Ellipsis icon |\n| `size`                     | Applied both to the default `switcher` and the menu.                                           |            `'s' \\| 'm' \\| 'l' \\| 'xl'`             |     `'m'`     |\n| `disabled`                 | Setting this prop to `true` disables the `switcher` button and prevents the menu from opening. |                     `boolean`                      |               |\n| `renderSwitcher`           | Render function for the menu toggle control.                                                   |                 `React.ReactNode`                  |               |\n| `switcherWrapperClassName` | Value for the `className` prop of the `switcher`'s parent component.                           |                      `string`                      |               |\n| `defaultSwitcherProps`     | Default `switcher` props.                                                                      |                   `ButtonProps`                    |               |\n| `defaultSwitcherClassName` | Value for the `className` prop of the default `switcher`.                                      |                      `string`                      |               |\n| `menuProps`                | Overrides the default dropdown menu popup props.                                               |                    `MenuProps`                     |               |\n| `popupProps`               | Overrides the default popup props.                                                             |                    `PopupProps`                    |               |\n| `open`                     | Controls dropdown menu visibility.                                                             |                     `boolean`                      |               |\n| `onOpenToggle`             | Called when the menu is opened or closed.                                                      |                    `() => void`                    |               |\n| `onSwitcherClick`          | Called when `switcher` is clicked.                                                             |       `React.MouseEventHandler<HTMLElement>`       |               |\n| `hideOnScroll`             | Specifies whether to hide the menu when a parent element is scrolled.                          |                     `boolean`                      |    `true`     |\n| `children`                 | Custom content inside the menu popup.                                                          |                 `React.ReactNode`                  |               |\n\n### DropdownMenuItem\n\nThis type describes individual dropdown menu items.\n\n| Name         | Description                                                                                                                     |                      Type                      | Default |\n| :----------- | :------------------------------------------------------------------------------------------------------------------------------ | :--------------------------------------------: | :-----: |\n| `text`       | Menu item content.                                                                                                              |               `React.ReactNode`                |         |\n| `action`     | Menu item click handler. Recieves the parameters from the parent dropdown menu component (both `event` and `data`).             | `(event: React.MouseEvent, data: any) => void` |         |\n| `iconStart`  | Menu item icon before the item content.                                                                                         |               `React.ReactNode`                |         |\n| `iconEnd`    | Menu item icon after the item content. Ignored if the item has a submenu.                                                       |               `React.ReactNode`                |         |\n| `hidden`     | Determines whether the item is hidden.                                                                                          |                   `boolean`                    |         |\n| `disabled`   | Determines whether the item is disabled.                                                                                        |                   `boolean`                    |         |\n| `href`       | Menu item with this prop becomes a link to the specified location.                                                              |                    `string`                    |         |\n| `target`     | Same as the `target` attribute of the `<a>` tag.                                                                                |                    `string`                    |         |\n| `rel`        | Same as the `rel` attribute of the `<a>` tag.                                                                                   |                    `string`                    |         |\n| `extraProps` | Additional menu item props.                                                                                                     |                    `object`                    |         |\n| `title`      | Tooltip text.                                                                                                                   |                    `string`                    |         |\n| `className`  | HTML `class` attribute value.                                                                                                   |                    `string`                    |         |\n| `items`      | Submenu items.                                                                                                                  |  `(DropdownMenuItem \\| DropdownMenuItem[])[]`  |         |\n| `popupProps` | Submenu popup props.                                                                                                            |                    `string`                    |         |\n| `path`       | Path of indexes from the root to the current item.                                                                              |                   `number[]`                   |         |\n| `closeMenu`  | Custom `closeMenu` callback. It can be called instead of closing the main menu and used to close submenus before the main menu. |                  `() => void`                  |         |\n\n### SwitcherProps\n\n| Name        | Description                                                    |     Type     |\n| :---------- | :------------------------------------------------------------- | :----------: |\n| `onClick`   | Called when the switcher is clicked.                           | `() => void` |\n| `onKeyDown` | Called when the switcher is focused and action key is pressed. | `() => void` |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}