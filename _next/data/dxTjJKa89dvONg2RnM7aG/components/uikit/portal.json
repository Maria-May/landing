{"pageProps":{"libId":"uikit","componentId":"portal","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Portal\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Portal} from '@gravity-ui/uikit';\n```\n\n`Portal` is a utility component, a simple wrapper around React [`createPortal`](https://react.dev/reference/react-dom/createPortal)\nthat allows you to render children into a DOM node outside the parent component.\n\n## Container\n\nBy default, `Portal` renders its children into `document.body`; however, it can be changed with the `container` property.\nAdditionally, a container can be provided to all `Portal`s in the React subtree using the `PortalProvder` component.\n\n```tsx\nimport {Portal, PortalProvider} from '@gravity-ui/uikit'\n\nconst myRoot = document.getElementById('my-root');\n\n<Portal>This is rendered inside document.body</Portal>\n<Portal container={myRoot}>This is rendered inside #my-root node</Portal>\n<PortalProvider container={myRoot}>\n    <Portal>This is also rendered inside #my-root</Portal>\n</PortalProvider>\n```\n\n## Properties\n\n| Name          | Description                                           |       Type        |     Default     |\n| :------------ | :---------------------------------------------------- | :---------------: | :-------------: |\n| children      | Any React content                                     | `React.ReactNode` |                 |\n| container     | DOM element children to be mounted                    |   `HTMLElement`   | `document.body` |\n| disablePortal | If true, renders children within normal DOM hierarchy |     `boolean`     |                 |\n"},"__N_SSG":true}