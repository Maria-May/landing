{"pageProps":{"libId":"uikit","componentId":"checkbox","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Checkbox\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Checkbox} from '@gravity-ui/uikit';\n```\n\nThe `Checkbox` component allows the user to select or deselect a specific value.\n\n## States\n\nThe Checkbox can be in different states.\n\n- Checked - when the checkbox is selected.\n- Disabled - when the checkbox is unavailable for interaction.\n- Indeterminate - when the checkbox is in an intermediate state between being selected and unselected.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Checkbox size=\"l\" checked={false}>Unchecked</Checkbox>\n<Checkbox size=\"l\" checked>Checked</Checkbox>\n<Checkbox size=\"l\" disabled>Disabled</Checkbox>\n<Checkbox size=\"l\" indeterminate>Indeterminate</Checkbox>\n`}\n>\n    <UIKit.Checkbox size=\"l\" checked={false}>Unchecked</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\" checked>Checked</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\" disabled>Disabled</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\" indeterminate>Indeterminate</UIKit.Checkbox>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Checkbox size=\"l\" checked={false}>Unchecked</Checkbox>\n<Checkbox size=\"l\" checked>Checked</Checkbox>\n<Checkbox size=\"l\" disabled>Disabled</Checkbox>\n<Checkbox size=\"l\" indeterminate>Indeterminate</Checkbox>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Size\n\nTo control the size of the `Checkbox`, use the `size` property. The default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Checkbox size=\"m\">M Size</Checkbox>\n<Checkbox size=\"l\">L Size</Checkbox>\n`}\n>\n    <UIKit.Checkbox size=\"m\">M Size</UIKit.Checkbox>\n    <UIKit.Checkbox size=\"l\">L Size</UIKit.Checkbox>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Checkbox size=\"m\">M Size</Checkbox>\n<Checkbox size=\"l\">L Size</Checkbox>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Label\n\nYou can set a label for a `Checkbox` component using the `content` property or pass it as children.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n <div>\n  <Checkbox content=\"Content\" size=\"l\" />\n  <div\n      style={{\n          marginTop: 10,\n      }}\n  >\n      <Checkbox size=\"l\">\n          <span>Content as children</span>\n      </Checkbox>\n  </div>\n</div>\n`}\n>\n <div>\n  <UIKit.Checkbox content=\"Content\" size=\"l\" />\n  <div\n      style={{\n          marginTop: 10,\n      }}\n  >\n      <UIKit.Checkbox size=\"l\">\n          <span>Content as children</span>\n      </UIKit.Checkbox>\n  </div>\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<div>\n  <Checkbox content=\"Content\" size=\"l\" />\n  <div\n    style={{\n      marginTop: 10,\n    }}\n  >\n    <Checkbox size=\"l\">\n      <span>Content as children</span>\n    </Checkbox>\n  </div>\n</div>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name           | Description                                                                                          |                     Type                      | Default |\n| :------------- | :--------------------------------------------------------------------------------------------------- | :-------------------------------------------: | :-----: |\n| children       | The content of the checkbox (usually a label).                                                       |                  `ReactNode`                  |         |\n| content        | The content of the checkbox (alternative to children).                                               |                  `ReactNode`                  |         |\n| disabled       | Toggles the `disabled` state of the checkbox.                                                        |                   `boolean`                   | `false` |\n| checked        | Toggles the checked state of the checkbox.                                                           |                   `boolean`                   | `false` |\n| defaultChecked | Sets the initial checked state when the component is mounted.                                        |                   `boolean`                   | `false` |\n| onUpdate       | Fires when the user changes the checkbox state. Provides the checked value as a callback's argument. |         `(checked: boolean) => void`          |         |\n| onChange       | Fires when the user changes the checkbox state. Provides the change event as a callback's argument.  |                  `Function`                   |         |\n| onFocus        | Event handler for when the checkbox input element receives focus.                                    |                  `Function`                   |         |\n| onBlur         | Event handler for when the checkbox input element loses focus.                                       |                  `Function`                   |         |\n| size           | Sets the size of the checkbox.                                                                       |                    `m` `l`                    |   `m`   |\n| id             | HTML `id` attribute                                                                                  |                   `string`                    |         |\n| qa             | HTML `data-qa` attribute, used in tests.                                                             |                   `string`                    |         |\n| style          | HTML `style` attribute                                                                               |             `React.CSSProperties`             |         |\n| className      | HTML `class` attribute                                                                               |                   `string`                    |         |\n| title          | HTML `title` attribute                                                                               |                   `string`                    |         |\n| name           | HTML `name` attribute for the input element.                                                         |                   `string`                    |         |\n| value          | HTML `value` attribute for the input element.                                                        |                   `string`                    |         |\n| indeterminate  | Toggles the indeterminate state of the checkbox.                                                     |                   `boolean`                   | `false` |\n| controlProps   | Additional props for the underlying input element.                                                   | `React.InputHTMLAttributes<HTMLInputElement>` |         |\n| controlRef     | Ref to the underlying input element.                                                                 |         `React.Ref<HTMLInputElement>`         |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}