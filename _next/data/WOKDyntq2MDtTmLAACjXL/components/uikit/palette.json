{"pageProps":{"libId":"uikit","componentId":"palette","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Palette\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Palette} from '@gravity-ui/uikit';\n```\n\nThe `Palette` component is used display a grid of icons/emojis/reactions/symbols which you can select or unselect.\n\n### Disabled state\n\nYou can disable every option with the `disabled` property. If you want to disable only a portion of options, you can change the `disabled` property of some of the `options` (`PaletteOption[]`).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst options: PaletteOption[] = [\n    {content: 'ðŸ˜Ž', value: 'ID-cool'},\n    {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n// disable the first item\n<Palette options={[{ ...options[0], disabled: true }, options[1]]} disabled={true} />\n// or disable all of them\n<Palette options={options} disabled={true} />\n`}\n>\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool', disabled: true},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n    />\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        disabled={true}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: PaletteOption[] = [\n  // disable a single item\n  {content: 'ðŸ˜Ž', value: 'ID-cool', disabled: true},\n  {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n// or disable all of them\n<Palette options={options} disabled={true} />;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Size\n\nTo control the size of the `Palette`, use the `size` property. The default size is `s`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst options: PaletteOption[] = [\n    {content: 'ðŸ˜Ž', value: 'ID-cool'},\n    {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n<Palette options={options} size={\"xs\"} />\n<Palette options={options} size={\"s\"} />\n<Palette options={options} size={\"m\"} />\n<Palette options={options} size={\"l\"} />\n<Palette options={options} size={\"xl\"} />\n`}\n>\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        size=\"xs\"\n    />\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        size=\"s\"\n    />\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        size=\"m\"\n    />\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        size=\"l\"\n    />\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        size=\"xl\"\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: PaletteOption[] = [\n    {content: 'ðŸ˜Ž', value: 'ID-cool'},\n    {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n<Palette options={options} size={\"xs\"} />\n<Palette options={options} size={\"s\"} />\n<Palette options={options} size={\"m\"} />\n<Palette options={options} size={\"l\"} />\n<Palette options={options} size={\"xl\"} />\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Columns\n\nYou can change the number of columns in the grid by changing the `columns` property (default is `6`).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst options: PaletteOption[] = [\n    {content: 'ðŸ˜Ž', value: 'ID-cool'},\n    {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n<Palette options={options} columns={1} />\n`}\n>\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        columns={1}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: PaletteOption[] = [\n  {content: 'ðŸ˜Ž', value: 'ID-cool'},\n  {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n<Palette options={options} columns={1} />;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Multiple\n\nBy default you can (un)select multiple options, but in case you want only one option to be selected, you can disable the `multiple` property.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst options: PaletteOption[] = [\n    {content: 'ðŸ˜Ž', value: 'ID-cool'},\n    {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n<Palette options={options} multiple={false} />\n`}\n>\n    <UIKit.Palette\n        options={[\n            {content: 'ðŸ˜Ž', value: 'ID-cool'},\n            {content: 'ðŸ¥´', value: 'ID-woozy'},\n        ]}\n        multiple={false}\n    />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst options: PaletteOption[] = [\n  {content: 'ðŸ˜Ž', value: 'ID-cool'},\n  {content: 'ðŸ¥´', value: 'ID-woozy'},\n];\n<Palette options={options} columns={1} />;\n```\n\n<!--/GITHUB_BLOCK-->\n\n### Properties\n\n`PaletteProps`:\n\n| Name            | Description                                                                             |                          Type                          | Default |\n| :-------------- | :-------------------------------------------------------------------------------------- | :----------------------------------------------------: | :-----: |\n| aria-label      | HTML `aria-label` attribute.                                                            |                        `string`                        |         |\n| aria-labelledby | ID of the visible `Palette` caption element                                             |                        `string`                        |         |\n| className       | HTML `class` attribute.                                                                 |                        `string`                        |         |\n| columns         | Number of elements per row.                                                             |                        `number`                        |   `6`   |\n| defaultValue    | Sets the initial value state when the component is mounted.                             |                       `string[]`                       |         |\n| disabled        | Disables the options.                                                                   |                       `boolean`                        | `false` |\n| multiple        | Allows selecting multiple options.                                                      |                       `boolean`                        | `true`  |\n| onBlur          | `onBlur` event handler.                                                                 | `(event: React.FocusEvent<HTMLButtonElement>) => void` |         |\n| onFocus         | `onFocus` event handler.                                                                | `(event: React.FocusEvent<HTMLButtonElement>) => void` |         |\n| onUpdate        | Fires when the user changes the state. Provides the new value as a callback's argument. |              `(value: string[]) => void`               |         |\n| optionClassName | HTML `class` attribute for the palette button.                                          |                        `string`                        |         |\n| options         | List of options (palette elements).                                                     |                   `PaletteOption[]`                    |  `[]`   |\n| qa              | HTML `data-qa` attribute, used in tests.                                                |                        `string`                        |         |\n| rowClassName    | HTML `class` attribute for a palette row.                                               |                        `string`                        |         |\n| size            | Sets the size of the elements.                                                          |                 `xs` `s` `m` `l` `xl`                  |   `m`   |\n| style           | HTML `style` attribute.                                                                 |                 `React.CSSProperties`                  |         |\n| value           | Current value for controlled usage of the component.                                    |                       `string[]`                       |         |\n\n`PaletteOption`:\n\n| Name     | Description             |    Type     | Default |\n| :------- | :---------------------- | :---------: | :-----: |\n| content  | HTML `class` attribute. | `ReactNode` |         |\n| disabled | Disables the button.    |  `boolean`  | `false` |\n| title    | HTML `title` attribute. |  `string`   |         |\n| value    | Control value.          |  `string`   |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}