{"pageProps":{"libId":"uikit","componentId":"user","readmeContent":"<!--GITHUB_BLOCK-->\n\n# User\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {User} from '@gravity-ui/uikit';\n```\n\nGeneral component for displaying a user avatar with a info block. It uses [Avatar](../Avatar/README.md) component to render the avatar. Also, it accepts custom react node as an avatar.\n\n## Name and description\n\n`User` component has properties `name` and `description` to display a info block.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"l\" />\n`}\n>\n    <UIKit.User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"l\" />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n## Size\n\nTo control the size of the `User` use the `size` property. The default size is `m`. Possible values: `xs`, `s`, `m`, `l`, `xl`.\n\nThis propeperty passes to the internal `Avatar` component too.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"xs\" />\n<User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"s\" />\n<User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"m\" />\n<User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"l\" />\n<User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"xl\" />\n`}\n>\n    <UIKit.User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"xs\" />\n    <UIKit.User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"s\" />\n    <UIKit.User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"m\" />\n    <UIKit.User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"l\" />\n    <UIKit.User avatar={{text: 'Charles Darwin', theme: 'brand'}} name=\"Charles Darwin\" description=\"charles@mail.ai\" size=\"xl\" />\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n## Properties\n\n| Name            | Description                             |                                Type                                | Default |\n| :-------------- | :-------------------------------------- | :----------------------------------------------------------------: | :-----: |\n| avatar          | User avatar                             | [AvatarProps](../Avatar/README.md#properties) `React.ReactElement` |         |\n| name            | User name                               |                         `React.ReactNode`                          |         |\n| description     | User description                        |                         `React.ReactNode`                          |         |\n| size            | User block size                         |                  `'xs'` `'s'` `'m'` `'l'` `'xl'`                   |   `m`   |\n| aria-label      | `aria-label` for user block             |                              `string`                              |         |\n| aria-labelledby | `aria-labelledby` for user block        |                              `string`                              |         |\n| className       | Custom CSS class for root element       |                              `string`                              |         |\n| style           | HTML style attribute                    |                       `React.CSSProperties`                        |         |\n| qa              | HTML `data-qa` attribute, used in tests |                              `string`                              |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","menu_themer":"Themer","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers_one":"Maintainer:","maintainers_other":"Maintainers:","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}