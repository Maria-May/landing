{"pageProps":{"libId":"uikit","componentId":"switch","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Switch\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Switch} from '@gravity-ui/uikit';\n```\n\nThe Switch component is used to toggle between two states, typically representing \"on\" and \"off\" or \"enabled\" and \"disabled\" states.\n\n## States\n\nThe Switch can be in different states.\n\n- Checked - when the switch is in the \"On\" state.\n- Disabled - when the switch is unavailable for interaction.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Switch size=\"l\" checked={false}>Unchecked</Switch>\n<Switch size=\"l\" checked>Checked</Switch>\n<Switch size=\"l\" disabled>Disabled</Switch>\n`}\n>\n    <UIKit.Switch size=\"l\" checked={false}>Unchecked</UIKit.Switch>\n    <UIKit.Switch size=\"l\" checked>Checked</UIKit.Switch>\n    <UIKit.Switch size=\"l\" disabled>Disabled</UIKit.Switch>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Switch size=\"l\" checked={false}>Unchecked</Switch>\n<Switch size=\"l\" checked>Checked</Switch>\n<Switch size=\"l\" disabled>Disabled</Switch>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Size\n\nTo control the size of the `Switch`, use the `size` property. The default size is `m`.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<Switch size=\"m\">M Size</Switch>\n<Switch size=\"l\">L Size</Switch>\n`}\n>\n    <UIKit.Switch size=\"m\">M Size</UIKit.Switch>\n    <UIKit.Switch size=\"l\">L Size</UIKit.Switch>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<Switch size=\"m\">M Size</Switch>\n<Switch size=\"l\">L Size</Switch>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Label\n\nYou can set a label for a `Switch` component using the `content` property or pass it as children.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\n<div>\n  <Switch content=\"Content\" size=\"l\" />\n  <div\n    style={{\n      marginTop: 10,\n    }}\n  >\n    <Switch size=\"l\">\n      <span>Content as children</span>\n    </Switch>\n  </div>\n</div>\n`}\n>\n<div>\n  <UIKit.Switch content=\"Content\" size=\"l\" />\n  <div\n    style={{\n      marginTop: 10,\n    }}\n  >\n    <UIKit.Switch size=\"l\">\n      <span>Content as children</span>\n    </UIKit.Switch>\n  </div>\n</div>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\n<div>\n  <Switch content=\"Content\" size=\"l\" />\n  <div\n    style={{\n      marginTop: 10,\n    }}\n  >\n    <Switch size=\"l\">\n      <span>Content as children</span>\n    </Switch>\n  </div>\n</div>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Properties\n\n| Name           | Description                                                                                              |                     Type                      | Default |\n| :------------- | :------------------------------------------------------------------------------------------------------- | :-------------------------------------------: | :-----: |\n| children       | The content of the switch (usually a label).                                                             |                  `ReactNode`                  |         |\n| content        | The content of the switch (alternative to children).                                                     |                  `ReactNode`                  |         |\n| disabled       | Toggles the `disabled` state of the switch.                                                              |                   `boolean`                   | `false` |\n| checked        | Toggles the checked state of the switch.                                                                 |                   `boolean`                   | `false` |\n| defaultChecked | Sets the initial checked state when the component is mounted.                                            |                   `boolean`                   | `false` |\n| onUpdate       | Fires when the switch state is changed by the user. Provides the checked value as a callback's argument. |         `(checked: boolean) => void`          |         |\n| onChange       | Fires when the switch state is changed by the user. Provides the change event as a callback's argument.  |                  `Function`                   |         |\n| onFocus        | Event handler for when the switch input element receives focus.                                          |                  `Function`                   |         |\n| onBlur         | Event handler for when the switch input element loses focus.                                             |                  `Function`                   |         |\n| size           | Sets the size of the switch.                                                                             |                    `m` `l`                    |   `m`   |\n| id             | HTML `id` attribute                                                                                      |                   `string`                    |         |\n| qa             | HTML `data-qa` attribute, used in tests.                                                                 |                   `string`                    |         |\n| style          | HTML `style` attribute                                                                                   |             `React.CSSProperties`             |         |\n| className      | HTML `class` attribute                                                                                   |                   `string`                    |         |\n| title          | HTML `title` attribute                                                                                   |                   `string`                    |         |\n| name           | HTML `name` attribute for the input element.                                                             |                   `string`                    |         |\n| value          | HTML `value` attribute for the input element.                                                            |                   `string`                    |         |\n| indeterminate  | Toggles the indeterminate state of the switch.                                                           |                   `boolean`                   | `false` |\n| controlProps   | Additional props for the underlying input element.                                                       | `React.InputHTMLAttributes<HTMLInputElement>` |         |\n| controlRef     | Ref to the underlying input element.                                                                     |         `React.Ref<HTMLInputElement>`         |         |\n","_nextI18Next":{"initialI18nStore":{"en":{"common":{"actions_open":"Open","actions_copyToClipboard":"Copy to clipboard","actions_share":"Share","actions_github":"GitHub","actions_storybook":"Storybook","menu_libraries":"Libraries","menu_components":"Components","menu_design":"Design","menu_icons":"Icons","roadmap_inProgress":"In progress","navigation_previous":"Previous","navigation_next":"Next","emptySearchPlaceholder":"Nothing found","show_more":"Show more","show_less":"Show less"},"component":{"actions_openInFigma":"Open in Figma","title":"Components","searchPlaceholder":"Search by component name","color-input_validation-format-error":"Incorrect format","maintainers":"Maintainers:","theme":"Switch theme","rtlOn":"Switch RTL on","rtlOff":"Switch RTL off","rtlNotSupported":"RTL not supported"}}},"initialLocale":"en","ns":["common","component"],"userConfig":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false},"default":{"i18n":{"locales":["en"],"defaultLocale":"en","defaultNS":"common","ignoreJSONStructure":false}}}}},"__N_SSG":true}