{"pageProps":{"libId":"uikit","componentId":"popup","readmeContent":"<!--GITHUB_BLOCK-->\n\n# Popup\n\n<!--/GITHUB_BLOCK-->\n\n```tsx\nimport {Popup} from '@gravity-ui/uikit';\n```\n\n`Popup` can be used to display \"floating\" content above the page. It's a wrapper around [Popper.js](https://popper.js.org)\nwith some defaults. To control visibility of the `Popup` use the `open` property.\nThe children of the `Popup` is rendered inside [`Portal`](../Portal) component, to disable this behaviour use `disablePortal` property.\n\n## Anchor\n\nRef object of DOM element is passed to the `anchorRef` property to create `Popper.js` instance.\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst buttonRef = React.useRef(null);\nconst [open, setOpen] = React.useState(false);\n\n<Button ref={buttonRef} onClick={() => setOpen((prevOpen) => !prevOpen)}>\n  Toggle Popup\n</Button>\n<Popup anchorRef={buttonRef} open={open} placement=\"bottom\">\n  Content\n</Popup>\n`}>\n    <UIKitExamples.PopupAnchorExample/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n<!--GITHUB_BLOCK-->\n\n```tsx\nconst buttonRef = React.useRef(null);\nconst [open, setOpen] = React.useState(false);\n\n<Button ref={buttonRef} onClick={() => setOpen((prevOpen) => !prevOpen)}>\n  Toggle Popup\n</Button>\n<Popup anchorRef={buttonRef} open={open} placement=\"bottom\">\n  Content\n</Popup>\n```\n\n<!--/GITHUB_BLOCK-->\n\n## Placement\n\nUse `placement` property to control `Popup` position around the anchor element.\nAccept all values from `Popper.js` [placement](https://popper.js.org/docs/v2/constructors/#options).\n\n<!--LANDING_BLOCK\n\n<ExampleBlock\n    code={`\nconst boxRef = React.useRef(null);\n\n<div ref={boxRef} />\n<Popup open anchorRef={boxRef} placement=\"top-start\">Top Start</Popup>\n<Popup open anchorRef={boxRef} placement=\"top\">Top</Popup>\n<Popup open anchorRef={boxRef} placement=\"top-end\">Top End</Popup>\n<Popup open anchorRef={boxRef} placement=\"right-start\">Right Start</Popup>\n<Popup open anchorRef={boxRef} placement=\"right\">Right</Popup>\n<Popup open anchorRef={boxRef} placement=\"right-end\">Right End</Popup>\n<Popup open anchorRef={boxRef} placement=\"bottom-end\">Bottom End</Popup>\n<Popup open anchorRef={boxRef} placement=\"bottom\">Bottom</Popup>\n<Popup open anchorRef={boxRef} placement=\"bottom-start\">Bottom Start</Popup>\n<Popup open anchorRef={boxRef} placement=\"left-end\">Left End</Popup>\n<Popup open anchorRef={boxRef} placement=\"left\">Left</Popup>\n<Popup open anchorRef={boxRef} placement=\"left-start\">Left Start</Popup>\n`}>\n    <UIKitExamples.PopupPlacementExample/>\n</ExampleBlock>\n\nLANDING_BLOCK-->\n\n## Properties\n\n| Name                 | Description                                                                    |                   Type                   |     Default     |\n| :------------------- | :----------------------------------------------------------------------------- | :--------------------------------------: | :-------------: |\n| altBoundary          | `altBoundary` parameter for `Popper.js` `offset` modifier                      |                `boolean`                 |     `false`     |\n| anchorRef            | `Popper.js` anchor element. Can also be `popper.VirtualElement`                |             `PopupAnchorRef`             |                 |\n| autoFocus            | While opened focus will be set to the first interactive element in the content |                `boolean`                 |     `false`     |\n| children             | Any React content                                                              |            `React.ReactNode`             |                 |\n| className            | HTML `class` atribute for root node                                            |                 `string`                 |                 |\n| container            | DOM element children to be mounted to                                          |              `HTMLElement`               | `document.body` |\n| contentClassName     | HTML `class` atribute for content node                                         |                 `string`                 |                 |\n| disableEscapeKeyDown | Do not trigger close on `Esc`                                                  |                `boolean`                 |     `false`     |\n| disableLayer         | Do not use LayerManager on stacking popups                                     |                `boolean`                 |     `false`     |\n| disableOutsideClick  | Do not trigger close on outside clicks                                         |                `boolean`                 |     `false`     |\n| disablePortal        | Do not use `Portal` for children                                               |                `boolean`                 |     `false`     |\n| focusTrap            | Enable focus trapping behaviour                                                |                `boolean`                 |     `false`     |\n| hasArrow             | Render an arrow pointing to the anchor                                         |                `boolean`                 |     `false`     |\n| id                   | HTML `id` attribute                                                            |                 `string`                 |                 |\n| keepMounted          | `Popup` won't be removed from the DOM on hiding                                |                `boolean`                 |     `false`     |\n| modifiers            | `Popper.js` modifiers in addition to default: `arrow`, `offset`, `flip`        |                 `Array`                  |    `[0, 4]`     |\n| offset               | `Popper.js` offset                                                             |            `[number, number]`            |    `[0, 4]`     |\n| onBlur               | `blur` event handler                                                           |                `Function`                |                 |\n| onClose              | Handle `Popup` close event                                                     |                `Function`                |                 |\n| onEnterKeyDown       | `Enter` press event handler                                                    |                `Function`                |                 |\n| onEscapeKeyDown      | `Esc` press event handler                                                      |                `Function`                |                 |\n| onFocus              | `focus` event handler                                                          |                `Function`                |                 |\n| onMouseEnter         | `mouseenter` event handler                                                     |                `Function`                |                 |\n| onMouseLeave         | `mouseleave` event handler                                                     |                `Function`                |                 |\n| onOutsideClick       | Outside click event handler                                                    |                `Function`                |                 |\n| open                 | Controls visibility of the `Popup`                                             |                `boolean`                 |     `false`     |\n| placement            | `Popper.js` placement                                                          | `PopupPlacement` `Array<PopupPlacement>` |                 |\n| qa                   | Test attribute (`data-qa`)                                                     |                 `string`                 |                 |\n| restoreFocus         | If true focus will return to the anchor element                                |                `boolean`                 |     `false`     |\n| restoreFocusRef      | Element the focus will be restored to                                          |            `React.RefObject`             |                 |\n| role                 | `aria-role` attribute                                                          |                 `string`                 |                 |\n| strategy             | `Popper.js` positioning strategy                                               |       `popper.PositioningStrategy`       |    `[0, 4]`     |\n| style                | HTML `style` atribute for root node                                            |                 `string`                 |                 |\n"},"__N_SSG":true}